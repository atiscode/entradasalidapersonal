@model IEnumerable<IngresosInfo>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}
@(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => model.NombresApellidosUsuario).Titled("Nombre").RawNamed("TextoCatalogoNombre").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoTipoIngreso).Titled("Tipo de Ingreso").RawNamed("TextoCatalogoTipoIngreso").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoEmpresa).Titled("Empresa").RawNamed("TextoCatalogoEmpresa").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoArea).Titled("Área").RawNamed("TextoCatalogoArea").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoDepartamento).Titled("Departamento").RawNamed("TextoCatalogoDepartamento").AppendCss("celda-mediana");
            //columns.Add(model => model.PersonaReemplazante).Titled("Persona a la que Reemplaza").RawNamed("PersonaReemplazante").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoJefeDirecto).Titled("Jefe Directo").RawNamed("JefeDirecto").AppendCss("celda-grande");
            columns.Add(model => model.CorreoAsignado).Titled("Correo Asignado").RawNamed("CorreoAsignado").AppendCss("celda-grande");
            columns.Add(model => model.Sueldo).Titled("Sueldo").RawNamed("Sueldo").AppendCss("celda-grande");


            columns.Add(model =>
             "<button style='background-color:#00AD8E;border-color: #00AD8E;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ACTUALIZAR") + "' onclick='location.href=\"" + @Url.Action("Formulario", "Ingreso", new { id = model.IDIngreso }) + "\"' id='editar' data-id=\"" + model.IDIngreso + "\"><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>" +
            //"<a title='Editar.' data-backdrop='static' data-toggle='modal' data-target='#contenido-modal' onclick='_GetCreate({id:" + model.IDIngreso + "},\"" + @Url.Action("_Formulario", "Ingreso") + "\");'  class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ACTUALIZAR") + "' id='editar' data-id=\"" + model.IDIngreso + "\"><i class='glyphicon glyphicon-pencil' aria-hidden='true'></i></a>" +
                 " <button title = 'Descargar Ingreso.' style = 'background-color:#FFC52D;border-color: #FFC52D;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-DESCARGAR") + " ' onclick='DescargarArchivos({id:" + model.FichaIngresoID
                + "},\"" + @Url.Action("GenerarReporte", "Ingreso") + "\" , \"" + @Url.Action("DescargarArchivo", "Ingreso") + "\");' data-id=\"" + model.FichaIngresoID + "\"><span class='glyphicon glyphicon-print' aria-hidden='true' style='color:black'></span></button>" +
            " <button title='Eliminar.' onclick='ConfirmarEliminacion_(" + model.IDIngreso + ",\"" + @Url.Action("Eliminar", "Ingreso") + "\");' background-color:#FF5E00;border-color:#FF5E00;' class='btn btn-danger " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ELIMINAR") + "' id='eliminar' data-id=\"" + model.IDIngreso + "\"><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>").AppendCss("celda-pequenia").Encoded(false);

            //columns.Add(model =>
            //    "<a title='Editar.' data-backdrop='static' data-toggle='modal' data-target='#contenido-modal' onclick='_GetCreate({id:" + model.IDIngreso + "},\"" + @Url.Action("_Formulario", "Ingreso") + "\");'  class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ACTUALIZAR") + "' id='editar' data-id=\"" + model.IDIngreso + "\"><i class='glyphicon glyphicon-pencil' aria-hidden='true'></i></a>" +
            //    "<button title='Eliminar.' onclick='ConfirmarEliminacion_(" + model.IDIngreso + ",\"" + @Url.Action("Eliminar", "Ingreso") + "\");' background-color:#FF5E00;border-color:#FF5E00;' class='btn btn-danger " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ELIMINAR") + "' id='eliminar' data-id=\"" + model.IDIngreso + "\"><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>").AppendCss("celda-pequenia").Encoded(false);

        })
        .RowAttributed(model => new { data_id = model.IDIngreso })
        .Empty(Mensajes.MensajeNoDataListado)
        .Id("grid-Ingreso")
        .UsingProcessingMode(GridProcessingMode.Manual)
        .Pageable(pager =>
        {
            pager.TotalRows = ViewBag.TotalPaginas;
            pager.RowsPerPage = 10;
        })
        .Filterable()
        .Sortable())







