@model IEnumerable<RequerimientoEquipoInfo>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}
@(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.FechaSolicitud).Titled("Fecha Solicitud").RawNamed("FechaSolicitud").AppendCss("celda-grande");
                columns.Add(model => model.NombresApellidos).Titled("Usuario").RawNamed("NombresApellidos").AppendCss("celda-grande");

                columns.Add(model => model.Equipos).Titled("Equipos").RawNamed("Equipos").AppendCss("celda-grande");
                columns.Add(model => model.HerramientasAdicionales).Titled("Herramientas Adicionales").RawNamed("HerramientasAdicionales").AppendCss("celda-grande");

                columns.Add(model => model.NombreEmpresa).Titled("Empresa").RawNamed("Empresa").AppendCss("celda-grande");
                columns.Add(model => model.TextoCatalogoCargo).Titled("Cargo").RawNamed("Cargo").AppendCss("celda-grande");
                columns.Add(model => model.TextoCatalogoDepartamento).Titled("Departamento").RawNamed("Departamento").AppendCss("celda-grande");

                columns.Add(model => model.Tracking).RenderedAs(model => Html.DropDownList("Tracking" + model.IDRequerimientoEquipo, CatalogoDAL.ObtenerListadoCatalogosByCodigoSeleccion("TRACK-01", (model.Tracking ?? 0).ToString()), Etiquetas.TituloComboVacio, new { @class = "form-control tracking-select", onchange = "CambiarTracking(this);", onfocus= "PreCambioTracking(this);" })).Titled("Tracking");

                columns.Add(model => model.TextoAsignadoRequerimientoEquipo).Titled("Asignación").RawNamed("TextoAsignadoRequerimientoEquipo").AppendCss("celda-grande");

                columns.Add(model => " <button style='background-color:#00AD8E;border-color: #00AD8E;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ACTUALIZAR") + "' onclick='location.href=\"" + @Url.Action("Formulario", "RequerimientoEquipo", new { id = model.IDRequerimientoEquipo, usuarioID = model.UsuarioID }) + "\"' id='editar' data-id=\"" + model.IDRequerimientoEquipo + "\"><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>" +
                "  <a title='Comentarios proceso de aproabación de requerimiento.' data-backdrop='static' data-toggle='modal' data-target='#contenido-modal' onclick='_GetCreate({id:" + model.IDRequerimientoEquipo + "},\"" + @Url.Action("_AprobarRequerimiento", "RequerimientoEquipo") + "\");' style='cursor: pointer;background-color:#ccc;border-color:#ccc; display:" + (model.IDsEquiposSugeridosCargoUsuario != model.IDsEquipos && model.Asignado && !string.IsNullOrEmpty(model.IDsEquiposSugeridosCargoUsuario) || ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-APROBAR-REQ").Equals("ocultar-accion-catalogo") ? "inline-block" : "none") + ";' class='btn btn-danger " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-APROBAR-REQ") + "' id='eliminar' data-id=\"" + model.IDRequerimientoEquipo + "\"><i style='color: black;' class='fa fa-comments-o' aria-hidden='true'></i></a>" +
                 " <button title='Codificación de Equipos.' style='cursor: pointer; display:" + ((model.IDsEquiposSugeridosCargoUsuario == model.IDsEquipos || model.Aprobado == true || string.IsNullOrEmpty(model.IDsEquiposSugeridosCargoUsuario)) && model.Asignado && !(model.TieneCodificacion ?? false) || ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-CODIFICAR-REQ").Equals("ocultar-accion-catalogo") ? "inline-block" : "none") + ";'  class='btn btn-default " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-CODIFICAR-REQ") + "' onclick='location.href=\"" + @Url.Action("Formulario", "CodificacionEquipo", new { requerimientoID = model.IDRequerimientoEquipo }) + "\"' id='codificar-equipo' data-id=\"" + model.IDRequerimientoEquipo + "\"><span class='glyphicon glyphicon-qrcode' aria-hidden='true'></span></button>" +
                " <button title='Descargar Requerimiento Equipo.' style='background-color:#FFC52D;border-color: #FFC52D;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-DESCARGAR") + "'onclick='DescargarArchivos({id:" + model.IDRequerimientoEquipo + "},\"" + @Url.Action("GenerarReporte", "RequerimientoEquipo") + "\" , \"" + @Url.Action("DescargarArchivo", "RequerimientoEquipo") + "\");' data-id=\"" + model.IDRequerimientoEquipo + "\"><span class='glyphicon glyphicon-print' aria-hidden='true' style='color:black'></span></button>" +
                 " <button title='Eliminar.' onclick='ConfirmarEliminacion_(" + model.IDRequerimientoEquipo + ",\"" + @Url.Action("Eliminar", "RequerimientoEquipo") + "\");' background-color:#FF5E00;border-color:#FF5E00;' class='btn btn-danger " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ELIMINAR") + "' id='eliminar' data-id=\"" + model.IDRequerimientoEquipo + "\"><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>").AppendCss("celda-pequenia").Encoded(false);

            })
            .RowAttributed(model => new { data_id = model.IDRequerimientoEquipo })
            .Empty(Mensajes.MensajeNoDataListado)
            .Id("grid-RequerimientoEquipo")
            .UsingProcessingMode(GridProcessingMode.Manual)
            .Pageable(pager =>
            {
                pager.TotalRows = ViewBag.TotalPaginas;
                pager.RowsPerPage = 10;
            })
            .Filterable()
            .Sortable())